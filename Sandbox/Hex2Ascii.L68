00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 6/1/2016 10:12:42 PM

00000000                             1  ******************************************************************************
00000000                             2  * Title      : Ascii to Hex
00000000                             3  * Written by : Brandon Authier
00000000                             4  * Date       : 14 Apr 2016
00000000                             5  * Description: A program that takes a string and turns it into hex.
00000000                             6  *
00000000                             7  ******************************************************************************
00000000                             8  
00000000                             9  ******************************************************************************
00000000                            10  *           DEFINITIONS                                                      *
00000000                            11  ******************************************************************************
00000000  =ABCD1234                 12  HEXVALUE    EQU   $ABCD1234
00000000                            13  
00000000  =0000000D                 14  CR          EQU   $0D
00000000  =0000000A                 15  LF          EQU   $0A 
00000000                            16  
00001000                            17              ORG    $1000
00001000                            18              
00001000                            19  ******************************************************************************
00001000                            20  *           BEGIN CODE                                                       *
00001000                            21  ******************************************************************************
00001000                            22  
00001000                            23  *---------- START ------------------------------------------------------------
00001000                            24  * Begins program's logical flow. Similar to main in C/C++
00001000                            25  *-----------------------------------------------------------------------------
00001000                            26  START
00001000                            27  PRINT_HEX_AS_ASCII
00001000  4EB9 00001016             28      JSR         IO_WELCOME          * Print welcome message  
00001006                            29   
00001006  223C ABCD1234             30      MOVE.L      #HEXVALUE,D1        * This is the key, move value to D1
0000100C                            31      
0000100C  4EB9 00001038             32      JSR         PRINT_HEXVALUE      * Display hex value
00001012                            33      
00001012  FFFF FFFF                 34      SIMHALT                         * Halt simulator
00001016                            35      
00001016                            36  *---------- END - START ------------------------------------------------------
00001016                            37  
00001016                            38  
00001016                            39  *---------- IO_WELCOME -------------------------------------------------------
00001016                            40  * Prints a welcome message
00001016                            41  *-----------------------------------------------------------------------------
00001016                            42  
00001016                            43  IO_WELCOME 
00001016  43F9 00001050             44      LEA         INTRO,A1            * Loads message into A1
0000101C  103C 000E                 45      MOVE.B      #14,D0              * Moves the Task 14 into D0
00001020  4E4F                      46      TRAP        #15                 * Displays Intro Message 
00001022                            47        
00001022  4EB9 0000102A             48      JSR         NEW_LINE            * Call Subroutine        
00001028  4E75                      49      RTS                             * Return from subroutine
0000102A                            50          
0000102A                            51  *---------- END - IO_WELCOME -------------------------------------------------
0000102A                            52  
0000102A                            53  
0000102A                            54  *---------- NEW_LINE ---------------------------------------------------------
0000102A                            55  * Prints a new line
0000102A                            56  *-----------------------------------------------------------------------------
0000102A                            57  NEW_LINE
0000102A  43F9 0000109B             58      LEA         ENDL,A1             * Loads message into A1
00001030  103C 000E                 59      MOVE.B      #14,D0              * Moves the TRACK 14 into D0
00001034  4E4F                      60      TRAP        #15                 * Displays New line
00001036  4E75                      61      RTS                             * Return from subroutine
00001038                            62  
00001038                            63  *---------- END - NEW_LINE ---------------------------------------------------
00001038                            64  
00001038                            65  
00001038                            66  *---------- PRINT_HEXVALUE ---------------------------------------------------
00001038                            67  * Prints out to display whatever is in A1
00001038                            68  *-----------------------------------------------------------------------------
00001038                            69  PRINT_HEXVALUE
00001038  43F9 00001084             70      LEA         ASCIIPROMPT,A1      * Load message in A1 for display
0000103E  103C 000E                 71      MOVE.B      #14,D0              * Moves the Task 13 into D0
00001042  4E4F                      72      TRAP        #15                 * Displays contents of A1
00001044                            73      
00001044  143C 0010                 74      MOVE.B      #16,D2              * Move base 16 to D2
00001048  103C 000F                 75      MOVE.B      #15,D0              * Moves Task 15 into D0
0000104C  4E4F                      76      TRAP        #15                 * Displays contents of D1
0000104E                            77      
0000104E  4E75                      78      RTS                             * Return from subroutine                                  
00001050                            79  
00001050                            80  *---------- END - PRINT_HEXVALUE ---------------------------------------------
00001050                            81  
00001050                            82  
00001050                            83  ******************************************************************************
00001050                            84  *           VARIABLES AND CONSTANTS                                          *
00001050                            85  ******************************************************************************
00001050                            86  
00001050= 57 45 4C 43 4F 4D ...     87  INTRO           DC.B  'WELCOME!',CR,LF,'This program will convert Hex to Ascii.',CR,LF,0
00001084= 54 68 65 20 41 53 ...     88  ASCIIPROMPT     DC.B  'The ASCII value is: 0x',0
0000109B= 0D 0A 00                  89  ENDL            DC.B  CR,LF,0
0000109E                            90  
0000109E                            91  HEXSTRING       DS.B  80            * Var for hex string
000010EE                            92  
000010EE                            93                  END   START         * Last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ASCIIPROMPT         1084
CR                  D
ENDL                109B
HEXSTRING           109E
HEXVALUE            ABCD1234
INTRO               1050
IO_WELCOME          1016
LF                  A
NEW_LINE            102A
PRINT_HEXVALUE      1038
PRINT_HEX_AS_ASCII  1000
START               1000
